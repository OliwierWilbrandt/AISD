using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace Praca_domowa_1_AISD
{


    public class insertsort
    {
        public static void sort(int[] tab)
        {
            int n = tab.Length;
            for (int i = 1; i < n; i++)
            {
                int key = tab[i];
                int j = i - 1;

                while (j >= 0 && tab[j] > key)
                {
                    tab[j + 1] = tab[j];
                    j--;
                }
                tab[j + 1] = key;
            }
        }
    }



    public class quicksort
    {
        public static void Sort(int[] tab)
        {
            QuickSortRecursive(tab, 0, tab.Length - 1);
        }

        private static void QuickSortRecursive(int[] tab, int low, int high)
        {
            if (low < high)
            {
                int pi = Partition(tab, low, high);

                QuickSortRecursive(tab, low, pi - 1);
                QuickSortRecursive(tab, pi + 1, high);
            }
        }

        private static int Partition(int[] tab, int low, int high)
        {
            int pivot = tab[high];
            int i = low - 1;

            for (int j = low; j < high; j++)
            {
                if (tab[j] < pivot)
                {
                    i++;

                    int temp = tab[i];
                    tab[i] = tab[j];
                    tab[j] = temp;
                }
            }

            int temp1 = tab[i + 1];
            tab[i + 1] = tab[high];
            tab[high] = temp1;

            return i + 1;
        }
    }



    public class countingsort
    {
        public static void Sort(int[] tab)
        {
            int max = tab[0];
            int min = tab[0];

            foreach (int num in tab)
            {
                if (num > max)
                    max = num;
                if (num < min)
                    min = num;
            }

            int range = max - min + 1;
            int[] count = new int[range];
            int[] output = new int[tab.Length];

            foreach (int num in tab)
            {
                count[num - min]++;
            }

            for (int i = 1; i < count.Length; i++)
            {
                count[i] += count[i - 1];
            }

            for (int i = tab.Length - 1; i >= 0; i--)
            {
                output[count[tab[i] - min] - 1] = tab[i];
                count[tab[i] - min]--;
            }

            for (int i = 0; i < tab.Length; i++)
            {
                tab[i] = output[i];
            }
        }
    }





using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace Cwiczenia_1_AISD
{
    public partial class Form1 : Form
    {
        public Form1()
        {
            InitializeComponent();
        }

        private void button1_Click(object sender, EventArgs e)
        {
            //MessageBox.Show("Ä†wiczenia 1");
            int t;
            int[] tab = { 8, 7, 2, 1, 3, 5, 2 };
            for (int i = 0; i<tab.Length; i++)
            {
                for (int j = 1; j<tab.Length; j++)
                {
                   if (tab[j-1] > tab[j])
                    {
                        t = tab[i];
                        tab[j - 1] = tab[j];
                        tab[j] = t;
                    }
                }
            }

        }
        string ToString(int[] tab)
        {
            string wynik = "";
            for (int i = 0; i<tab.Length; i++)
            {
                wynik += tab[i].ToString() + " ";
            }
            return wynik;
        }
    }
}












